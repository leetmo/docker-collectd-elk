# Collect stats every 10s; overridable by setting COLLECTD_INTERVAL_SECONDS environment variable
# @COLLECTD_INTERVAL_SECONDS@

# Hostname in the metadata sent to logstash; override this by setting COLLECTD_HOST environment variable
# @COLLECTD_HOST@
FQDNLookup false

LoadPlugin cpu
LoadPlugin contextswitch
LoadPlugin disk
LoadPlugin load
LoadPlugin processes
LoadPlugin swap
LoadPlugin users

Timeout 2
ReadThreads 5
WriteThreads 5

WriteQueueLimitHigh 1000000
WriteQueueLimitLow   800000

TypesDB "/usr/share/collectd/types.db" "/usr/share/collectd/docker-collectd-plugin/dockerplugin.db"

LoadPlugin memory
<Plugin memory>
    ValuesPercentage true
</Plugin>

LoadPlugin python
<Plugin python>
    ModulePath "/usr/share/collectd/docker-collectd-plugin"
    Import "dockerplugin"

    <Module dockerplugin>
        BaseURL "unix://var/run/docker.sock"
        Timeout 3
        Dimension "image" "inspect:Config.Image"
    </Module>
</Plugin>

LoadPlugin network
<Plugin network>
    <Server "logstash" "25826">
    </Server>
</Plugin>

LoadPlugin logfile
<Plugin logfile>
    LogLevel debug
    File stderr
    Timestamp true
    PrintSeverity true
</Plugin>

LoadPlugin "aggregation"
<Plugin "aggregation">
    <Aggregation>
        Plugin "cpu"
        Type "cpu"
        GroupBy "Host"
        GroupBy "TypeInstance"
        CalculateAverage true
    </Aggregation>
</Plugin>

LoadPlugin "match_regex"
<Chain "PostCache">
    <Rule>
        <Match regex>
            Plugin "^cpu$"
            PluginInstance "^[0-9]+$"
        </Match>
        <Target write>
            Plugin "aggregation"
        </Target>
        Target stop
    </Rule>

    <Rule>
        <Match "regex">
            Plugin "^docker$"
        </Match>
        <Target "jump">
            Chain "FilterOutDetailedDockerStats"
        </Target>
    </Rule>

    Target "write"
</Chain>

<Chain "FilterOutDetailedDockerStats">
    <Rule "CpuUsage">
        <Match "regex">
            Type "^cpu.usage$"
        </Match>
        Target "return"
    </Rule>
    <Rule "MemoryUsage">
        <Match "regex">
            Type "^memory.usage$"
        </Match>
        Target "return"
    </Rule>
    <Rule "NetworkUsage">
        <Match "regex">
            Type "^network.usage$"
        </Match>
        Target "return"
    </Rule>
    <Rule "BlockIO">
        <Match "regex">
            Type "^blkio$"
            TypeInstance "^io_service_bytes_recursive-.*"
        </Match>
        Target "return"
    </Rule>

    Target "stop"
</Chain>

# <Include "/etc/collectd/collectd.conf.d">
#         Filter "*.conf"
# </Include>

